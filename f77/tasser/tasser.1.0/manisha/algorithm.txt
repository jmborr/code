     program TASSER	
open several input files
read in.dd file
call set_common subroutine   !see explanation below
call read_seq subroutine     !read amino acid sequence
call read_centro subroutine  !set expected radius of gyration
call read_profile subroutine !read potential energy for environment potential
call read_E13 subroutine     !read potential energy for 1-3 short range interaction
call read_E14 subroutine     !read potential energy for 1-4 short range interaction
call read_E15 subroutine     !read potential energy for 1-5 short range interaction
call read_quarsi3 subroutine !see explanation below
call read_par subroutine     !see explanation below
call read_concut subroutine  !set distance cutoff for stablishing a contact
call read_contactrestrain subroutine !read predicted contacts between sidechains
call read_distantrestrain subroutine !read predicted distance restraints
call read_longdistantrestrain subroutine !read long-range distance restraints
call read_CAcontact          !read predicted contacts between CA atoms
call read_exp subroutine     !read solvent exposure propensities
call reset_temperature subroutine !update minimun and maximum temperatures if no predicted contacts
call set_temperature subroutine   !set temperatures for different replicas
call set_EHB subroutine      !set hydrogen bond potential energy
call prepare_vectors subroutine   !prepare possible vectors v=(vx,vy,vz) satisfying |v*v|=[14,25]
call prepare_neighbors subroutine !define authorized neighbor vectors and sum of two vectors
call prepare_beta subroutine !define the hydrogen bond vector for a pair of neighboring vectors
call prepare_frg subroutine  !compute the secondary fragment biases
call get_acorder subroutine  !calculate expected contact order
call write_parameter subroutine   !print out initial parameters
call set_move_ratio subroutine    !set movement percentage for each movement type
call prepare_move2 subroutine     !prepare the two-bond move
if some of the fragments are frozen, call template_initial2 subroutine
open trajectory files
switch to template_simulation if any of the fragments is frozen
call read_initial2 subroutine     !see explanation below
iterate over cycles
  iterate over replicas
    set current replica temperature
    call set_current subroutine  !load replica coordinates and chain vectors
    call initial_move subroutine !see explanation below
    iterate over Monte Carlo trials
      iterate up to protein length
        select which backbone move to attempt
	call moveX               !see explation below
      end iterate up to protein length
    end iterate over Monte Carlo trials
    store new replica conformation and energy
  end iterate over replicas
  print out replica conformations
  call count_restraints subroutine !count number of satisfied restraints
  call swap subroutine          !swap replicas
end iterate over cycles
call test_neighbor subroutine !check all the neighboring residues
call test_overlap             !test the overlap of C_a and C_b
print out some averages
      end program TASSER


     subroutine set_common
read length of chain and name of protein
set expected number of contacts
set minimum and maximum temperatures for the different replicas
set number of replicas
set energy weigths for restraints
     end subroutine set_common


     subroutine read_quarsi3
read generic potential for parallel, antiparallel, and orthogonal contacts
read sequence specific potential for parallel, antiparallel, and orthogonal contacts
combine generic and sequence potentials
     end subroutine read_quarsi3


     subroutine read_par
read generic potential for orientation independented contact
read sequence specific potential for orientation independented contact
combine generic and sequence potentials
     end subroutine read_par


     subroutine read_initial2
determine how many templates to read from chain.dat
if not templates, call random_initial subroutine
read coordinates from each template
remove small segments from the template
call connect subroutine !generate random loops connecting consecutive template chunks
determine which residues are moveable
record frozen parts, if any
project conformation onto lattice, check chain consistence
record conformation into current replica
call move_point subroutine  !set positions as starting points for the different MC moves
     end subroutine read_initial2


     subroutine initial_move
call get_vvv subroutine !which position pairs are to be checked for excluded volume violations
call get_center subroutine !compute center of mass and ellipticities
compute conformation energy
initialize several parameters pertaining to interparticle contacts
     end subroutine initial_move


     subroutine call moveX 
prepare a substitute backbone conformation
backup old backbone conformation
calculate new and old energy
call metro subroutine !evaluate wether we accept the new conformation
if accept, update coordinates and other quantities
otherwise, revert to old conformation
     end subroutine call moveX 
